// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package router

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockMuxHandler is an autogenerated mock type for the MuxHandler type
type MockMuxHandler struct {
	mock.Mock
}

// Register provides a mock function with given fields: _a0
func (_m *MockMuxHandler) Register(_a0 *http.ServeMux) {
	_m.Called(_a0)
}

// String provides a mock function with given fields:
func (_m *MockMuxHandler) String() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewMockMuxHandler creates a new instance of MockMuxHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMuxHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMuxHandler {
	mock := &MockMuxHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
