// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package router

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockMiddleware is an autogenerated mock type for the Middleware type
type MockMiddleware struct {
	mock.Mock
}

// Execute provides a mock function with given fields: next
func (_m *MockMiddleware) Execute(next http.Handler) http.Handler {
	ret := _m.Called(next)

	var r0 http.Handler
	if rf, ok := ret.Get(0).(func(http.Handler) http.Handler); ok {
		r0 = rf(next)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.Handler)
		}
	}

	return r0
}

// NewMockMiddleware creates a new instance of MockMiddleware. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMiddleware(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMiddleware {
	mock := &MockMiddleware{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
