// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package stats

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockStorage is an autogenerated mock type for the storage type
type mockStorage struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx, key, val
func (_m *mockStorage) Get(ctx context.Context, key statsKey, val interface{}) error {
	ret := _m.Called(ctx, key, val)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, statsKey, interface{}) error); ok {
		r0 = rf(ctx, key, val)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Save provides a mock function with given fields: ctx, key, value
func (_m *mockStorage) Save(ctx context.Context, key statsKey, value interface{}) error {
	ret := _m.Called(ctx, key, value)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, statsKey, interface{}) error); ok {
		r0 = rf(ctx, key, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newMockStorage creates a new instance of mockStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockStorage(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockStorage {
	mock := &mockStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
