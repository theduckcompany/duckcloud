// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package fs

import (
	mock "github.com/stretchr/testify/mock"
	folders "github.com/theduckcompany/duckcloud/internal/service/folders"
)

// MockService is an autogenerated mock type for the Service type
type MockService struct {
	mock.Mock
}

// GetFolderFS provides a mock function with given fields: folder
func (_m *MockService) GetFolderFS(folder *folders.Folder) FS {
	ret := _m.Called(folder)

	var r0 FS
	if rf, ok := ret.Get(0).(func(*folders.Folder) FS); ok {
		r0 = rf(folder)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(FS)
		}
	}

	return r0
}

// NewMockService creates a new instance of MockService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockService {
	mock := &MockService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
